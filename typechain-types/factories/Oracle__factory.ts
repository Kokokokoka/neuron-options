/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Oracle, OracleInterface } from "../Oracle";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newDisputer",
        type: "address",
      },
    ],
    name: "DisputerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "expiryTimestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "disputedPrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "disputeTimestamp",
        type: "uint256",
      },
    ],
    name: "ExpiryPriceDisputed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "expiryTimestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "onchainTimestamp",
        type: "uint256",
      },
    ],
    name: "ExpiryPriceUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pricer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "disputePeriod",
        type: "uint256",
      },
    ],
    name: "PricerDisputePeriodUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pricer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lockingPeriod",
        type: "uint256",
      },
    ],
    name: "PricerLockingPeriodUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "pricer",
        type: "address",
      },
    ],
    name: "PricerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "StablePriceUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_expiryTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "disputeExpiryPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "endMigration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "uint80",
        name: "_roundId",
        type: "uint80",
      },
    ],
    name: "getChainlinkRoundData",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDisputer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_expiryTimestamp",
        type: "uint256",
      },
    ],
    name: "getExpiryPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
    ],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
    ],
    name: "getPricer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pricer",
        type: "address",
      },
    ],
    name: "getPricerDisputePeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pricer",
        type: "address",
      },
    ],
    name: "getPricerLockingPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_expiryTimestamp",
        type: "uint256",
      },
    ],
    name: "isDisputePeriodOver",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_expiryTimestamp",
        type: "uint256",
      },
    ],
    name: "isLockingPeriodOver",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_expiries",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_prices",
        type: "uint256[]",
      },
    ],
    name: "migrateOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "address",
        name: "_pricer",
        type: "address",
      },
    ],
    name: "setAssetPricer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pricer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_disputePeriod",
        type: "uint256",
      },
    ],
    name: "setDisputePeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_disputer",
        type: "address",
      },
    ],
    name: "setDisputer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_expiryTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setExpiryPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pricer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_lockingPeriod",
        type: "uint256",
      },
    ],
    name: "setLockingPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setStablePrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61152b8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c8063715018a6116100b8578063b7e1d1451161007c578063b7e1d145146102d7578063d2f3b4e814610300578063def3cb0514610313578063ee53140914610324578063f19ae73414610337578063f2fde38b1461034a57600080fd5b8063715018a61461026f5780638b3cddaf146102775780638da5cb5b1461028a5780638ee5074d1461029b5780639c7fe9d6146102ae57600080fd5b806341976e09116100ff57806341976e09146101fd57806357a37dca1461021e5780635fdc714914610231578063601407eb146102545780636c525d041461026757600080fd5b806301957f811461013c5780631b85462d146101695780632e4cf6ea146101915780632ecd8857146101a65780633fd3ec8f146101ea575b600080fd5b61014f61014a3660046111c2565b61035d565b604080519283529015156020830152015b60405180910390f35b61017c6101773660046111ec565b6103bf565b60408051928352602083019190915201610160565b6101a461019f366004611277565b6104c6565b005b6101d26101b43660046112f8565b6001600160a01b039081166000908152600460205260409020541690565b6040516001600160a01b039091168152602001610160565b6101a46101f8366004611313565b61064b565b61021061020b3660046112f8565b6107b0565b604051908152602001610160565b6101a461022c366004611346565b6108ce565b61024461023f3660046111c2565b610a66565b6040519015158152602001610160565b6101a46102623660046111c2565b610b1e565b6101a4610c2f565b6101a4610c6e565b6101a46102853660046111c2565b610ca4565b6000546001600160a01b03166101d2565b6101a46102a93660046112f8565b610d1b565b6102106102bc3660046112f8565b6001600160a01b031660009081526003602052604090205490565b6102106102e53660046112f8565b6001600160a01b031660009081526002602052604090205490565b61024461030e3660046111c2565b610d8f565b6001546001600160a01b03166101d2565b6101a4610332366004611346565b610def565b6101a46103453660046111c2565b610fce565b6101a46103583660046112f8565b611045565b6001600160a01b03821660009081526006602052604081205481906001816103b2576001600160a01b038616600090815260056020908152604080832088845290915290205491506103af8686610a66565b90505b90925090505b9250929050565b6001600160a01b038216600090815260066020526040812054819042816103b2576001600160a01b03868116600090815260046020526040902054166104205760405162461bcd60e51b815260040161041790611379565b60405180910390fd5b6001600160a01b038681166000908152600460208190526040918290205491516303bb0ddf60e61b815269ffffffffffffffffffff89169181019190915291169063eec377c090602401604080518083038186803b15801561048157600080fd5b505afa158015610495573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b991906113be565b9097909650945050505050565b6000546001600160a01b031633146104f05760405162461bcd60e51b8152600401610417906113e2565b600154600160a01b900460ff161561054a5760405162461bcd60e51b815260206004820152601e60248201527f4f7261636c653a206d6967726174696f6e20616c726561647920646f6e6500006044820152606401610417565b8281146105995760405162461bcd60e51b815260206004820152601e60248201527f4f7261636c653a20696e76616c6964206d6967726174696f6e206461746100006044820152606401610417565b60005b838110156106435760405180604001604052808484848181106105c1576105c1611417565b9050602002013581526020014281525060056000886001600160a01b03166001600160a01b03168152602001908152602001600020600087878581811061060a5761060a611417565b6020908102929092013583525081810192909252604001600020825181559101516001909101558061063b81611443565b91505061059c565b505050505050565b6000546001600160a01b031633146106755760405162461bcd60e51b8152600401610417906113e2565b6001600160a01b0381166106db5760405162461bcd60e51b815260206004820152602760248201527f4f7261636c653a2063616e6e6f74207365742070726963657220746f206164646044820152667265737328302960c81b6064820152608401610417565b6001600160a01b038216600090815260066020526040902054156107595760405162461bcd60e51b815260206004820152602f60248201527f4f7261636c653a20636f756c64206e6f7420736574206120707269636572206660448201526e1bdc881cdd18589b1948185cdcd95d608a1b6064820152608401610417565b6001600160a01b0382811660008181526004602052604080822080546001600160a01b0319169486169485179055517fac44f446a94cf337a8403cfa1764d3ab060f166e1e6d0fb2e7ccbb4889ce948d9190a35050565b60006107ea6040518060400160405280601681526020017513d49050d3114811d1550814149250d1481054d4d15560521b815250836110e0565b6001600160a01b038216600090815260066020526040902054806108c8576001600160a01b038381166000908152600460205260409020541661083f5760405162461bcd60e51b815260040161041790611379565b6001600160a01b03808416600090815260046020818152604092839020548351634c6afee560e11b815293519416936398d5fdca938084019390829003018186803b15801561088d57600080fd5b505afa1580156108a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c5919061145e565b90505b92915050565b6001546001600160a01b031633146109335760405162461bcd60e51b815260206004820152602260248201527f4f7261636c653a2063616c6c6572206973206e6f74207468652064697370757460448201526132b960f11b6064820152608401610417565b61093d8383610a66565b1561098a5760405162461bcd60e51b815260206004820152601b60248201527f4f7261636c653a206469737075746520706572696f64206f76657200000000006044820152606401610417565b6001600160a01b038316600090815260056020908152604080832085845290915290206001810154610a0e5760405162461bcd60e51b815260206004820152602760248201527f4f7261636c653a20707269636520746f206469737075746520646f6573206e6f6044820152661d08195e1a5cdd60ca1b6064820152608401610417565b805482825560408051828152602081018590524281830152905185916001600160a01b038816917f4c65ea297e9cdfe46f796ae9f245f80e9952cc9ee0544e9c5e5384e06e396ee09181900360600190a35050505050565b6001600160a01b03821660009081526006602052604081205480610b14576001600160a01b038416600090815260056020908152604080832086845282529182902082518084019093528054835260010154908201819052610acd576000925050506108c8565b6001600160a01b0380861660009081526004602090815260408083205490931680835260038252929091205490830151610b079082611129565b42119450505050506108c8565b5060019392505050565b6000546001600160a01b03163314610b485760405162461bcd60e51b8152600401610417906113e2565b6001600160a01b038281166000908152600460205260409020541615610bd65760405162461bcd60e51b815260206004820152603b60248201527f4f7261636c653a20636f756c64206e6f742073657420737461626c652070726960448201527f636520666f7220616e20617373657420776974682070726963657200000000006064820152608401610417565b6001600160a01b03821660008181526006602052604090819020839055517f4e5ecd60f0bbcaa2960ee093d3c7a8bf1e265338cae3032cc13adf65e95fa32590610c239084815260200190565b60405180910390a25050565b6000546001600160a01b03163314610c595760405162461bcd60e51b8152600401610417906113e2565b6001805460ff60a01b1916600160a01b179055565b6000546001600160a01b03163314610c985760405162461bcd60e51b8152600401610417906113e2565b610ca26000611135565b565b6000546001600160a01b03163314610cce5760405162461bcd60e51b8152600401610417906113e2565b6001600160a01b03821660008181526003602052604090819020839055517ff43f15b56789f3f735684531c1885129263b256f59dc4c71b211722a2f954d9690610c239084815260200190565b6000546001600160a01b03163314610d455760405162461bcd60e51b8152600401610417906113e2565b600180546001600160a01b0319166001600160a01b0383169081179091556040517fc0c3569eac4e1b890a966a247a7b7f0d496af49f2fc482b2959899b634693cfd90600090a250565b6001600160a01b03821660009081526006602052604081205480610b14576001600160a01b03808516600090815260046020908152604080832054909316808352600290915291902054610de38582611129565b421193505050506108c8565b6001600160a01b03838116600090815260046020526040902054163314610e755760405162461bcd60e51b815260206004820152603460248201527f4f7261636c653a2063616c6c6572206973206e6f7420617574686f72697a656460448201527320746f207365742065787069727920707269636560601b6064820152608401610417565b610e7f8383610d8f565b610eda5760405162461bcd60e51b815260206004820152602660248201527f4f7261636c653a206c6f636b696e6720706572696f64206973206e6f74206f76604482015265195c881e595d60d21b6064820152608401610417565b6001600160a01b038316600090815260056020908152604080832085845290915290206001015415610f4e5760405162461bcd60e51b815260206004820152601e60248201527f4f7261636c653a206469737075746520706572696f64207374617274656400006044820152606401610417565b6040805180820182528281524260208083018281526001600160a01b038816600081815260058452868120898252845286902094518555905160019094019390935583518581529081019190915284927f0160752083b78189f1650efb0abdaa0dd2110e5782f553c825705746ac2a5718910160405180910390a3505050565b6000546001600160a01b03163314610ff85760405162461bcd60e51b8152600401610417906113e2565b6001600160a01b03821660008181526002602052604090819020839055517fa8c3fc8bc370addd6cd25f335fb22ea56d17079376e28f460ca770f6d46b2c5990610c239084815260200190565b6000546001600160a01b0316331461106f5760405162461bcd60e51b8152600401610417906113e2565b6001600160a01b0381166110d45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610417565b6110dd81611135565b50565b61112582826040516024016110f6929190611477565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b179052611185565b5050565b60006108c582846114dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b80356001600160a01b03811681146111bd57600080fd5b919050565b600080604083850312156111d557600080fd5b6111de836111a6565b946020939093013593505050565b600080604083850312156111ff57600080fd5b611208836111a6565b9150602083013569ffffffffffffffffffff8116811461122757600080fd5b809150509250929050565b60008083601f84011261124457600080fd5b50813567ffffffffffffffff81111561125c57600080fd5b6020830191508360208260051b85010111156103b857600080fd5b60008060008060006060868803121561128f57600080fd5b611298866111a6565b9450602086013567ffffffffffffffff808211156112b557600080fd5b6112c189838a01611232565b909650945060408801359150808211156112da57600080fd5b506112e788828901611232565b969995985093965092949392505050565b60006020828403121561130a57600080fd5b6108c5826111a6565b6000806040838503121561132657600080fd5b61132f836111a6565b915061133d602084016111a6565b90509250929050565b60008060006060848603121561135b57600080fd5b611364846111a6565b95602085013595506040909401359392505050565b60208082526025908201527f4f7261636c653a2050726963657220666f722074686973206173736574206e6f6040820152641d081cd95d60da1b606082015260800190565b600080604083850312156113d157600080fd5b505080516020909101519092909150565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156114575761145761142d565b5060010190565b60006020828403121561147057600080fd5b5051919050565b604081526000835180604084015260005b818110156114a55760208187018101516060868401015201611488565b818111156114b7576000606083860101525b506001600160a01b0393909316602083015250601f91909101601f191601606001919050565b600082198211156114f0576114f061142d565b50019056fea26469706673582212207adb60e3c63dcf8bb4853863b623fe6994a3506ef57c6a7406ad524403a9edde64736f6c63430008090033";

type OracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Oracle__factory extends ContractFactory {
  constructor(...args: OracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Oracle> {
    return super.deploy(overrides || {}) as Promise<Oracle>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Oracle {
    return super.attach(address) as Oracle;
  }
  connect(signer: Signer): Oracle__factory {
    return super.connect(signer) as Oracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OracleInterface {
    return new utils.Interface(_abi) as OracleInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Oracle {
    return new Contract(address, _abi, signerOrProvider) as Oracle;
  }
}
