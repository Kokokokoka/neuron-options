/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
  BytesLike,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Spawn, SpawnInterface } from "../Spawn";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "logicContract",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "initializationCalldata",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
];

const _bytecode =
  "0x608060405260405161022138038061022183398101604081905261002291610136565b6000826001600160a01b03168260405161003c9190610204565b600060405180830381855af49150503d8060008114610077576040519150601f19603f3d011682016040523d82523d6000602084013e61007c565b606091505b505090508061008f573d6000803e3d6000fd5b60405169363d3d373d3d3d363d7360b01b60208201526001600160601b0319606085901b16602a8201526e5af43d82803e903d91602b57fd5bf360881b603e820152600090604d016040516020818303038152906040529050602d81602001f35b634e487b7160e01b600052604160045260246000fd5b60005b83811015610121578181015183820152602001610109565b83811115610130576000848401525b50505050565b6000806040838503121561014957600080fd5b82516001600160a01b038116811461016057600080fd5b60208401519092506001600160401b038082111561017d57600080fd5b818501915085601f83011261019157600080fd5b8151818111156101a3576101a36100f0565b604051601f8201601f19908116603f011681019083821181831017156101cb576101cb6100f0565b816040528281528860208487010111156101e457600080fd5b6101f5836020830160208801610106565b80955050505050509250929050565b60008251610216818460208701610106565b919091019291505056fe";

type SpawnConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SpawnConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Spawn__factory extends ContractFactory {
  constructor(...args: SpawnConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    logicContract: string,
    initializationCalldata: BytesLike,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<Spawn> {
    return super.deploy(
      logicContract,
      initializationCalldata,
      overrides || {}
    ) as Promise<Spawn>;
  }
  getDeployTransaction(
    logicContract: string,
    initializationCalldata: BytesLike,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      logicContract,
      initializationCalldata,
      overrides || {}
    );
  }
  attach(address: string): Spawn {
    return super.attach(address) as Spawn;
  }
  connect(signer: Signer): Spawn__factory {
    return super.connect(signer) as Spawn__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SpawnInterface {
    return new utils.Interface(_abi) as SpawnInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Spawn {
    return new Contract(address, _abi, signerOrProvider) as Spawn;
  }
}
