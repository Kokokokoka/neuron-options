/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PayableProxyController,
  PayableProxyControllerInterface,
} from "../PayableProxyController";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_controller",
        type: "address",
      },
      {
        internalType: "address",
        name: "_marginPool",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_weth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "controller",
    outputs: [
      {
        internalType: "contract Controller",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum Actions.ActionType",
            name: "actionType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "secondAddress",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "assets",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "vaultId",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "amounts",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Actions.ActionArgs[]",
        name: "_actions",
        type: "tuple[]",
      },
      {
        internalType: "address payable",
        name: "_sendEthTo",
        type: "address",
      },
    ],
    name: "operate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "weth",
    outputs: [
      {
        internalType: "contract WETH9",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200170538038062001705833981016040819052620000349162000473565b60016000819055600280546001600160a01b038087166001600160a01b0319928316179092558254918416911681179091556200008490836000196200055d6200008d602090811b91909117901c565b5050506200058b565b8015806200011b5750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b158015620000de57600080fd5b505afa158015620000f3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001199190620004c7565b155b620001935760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e63650000000000000000000060648201526084015b60405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b0390811663095ea7b360e01b17909152620001eb918591620001f016565b505050565b60006200024c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316620002ce60201b620006b9179092919060201c565b805190915015620001eb57808060200190518101906200026d9190620004e1565b620001eb5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016200018a565b6060620002df8484600085620002e9565b90505b9392505050565b6060824710156200034c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016200018a565b843b6200039c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016200018a565b600080866001600160a01b03168587604051620003ba919062000538565b60006040518083038185875af1925050503d8060008114620003f9576040519150601f19603f3d011682016040523d82523d6000602084013e620003fe565b606091505b509092509050620004118282866200041c565b979650505050505050565b606083156200042d575081620002e2565b8251156200043e5782518084602001fd5b8160405162461bcd60e51b81526004016200018a919062000556565b6001600160a01b03811681146200047057600080fd5b50565b6000806000606084860312156200048957600080fd5b835162000496816200045a565b6020850151909350620004a9816200045a565b6040850151909250620004bc816200045a565b809150509250925092565b600060208284031215620004da57600080fd5b5051919050565b600060208284031215620004f457600080fd5b81518015158114620002e257600080fd5b60005b838110156200052257818101518382015260200162000508565b8381111562000532576000848401525b50505050565b600082516200054c81846020870162000505565b9190910192915050565b60208152600082518060208401526200057781604085016020870162000505565b601f01601f19169190910160400192915050565b61116a806200059b6000396000f3fe6080604052600436106100345760003560e01c80633fc8cef3146100a8578063ce362ad3146100e4578063f77c4791146100f7575b6001546001600160a01b031633146100a65760405162461bcd60e51b815260206004820152602a60248201527f50617961626c6550726f7879436f6e74726f6c6c65723a2043616e6e6f7420726044820152690cac6cad2ecca408aa8960b31b60648201526084015b60405180910390fd5b005b3480156100b457600080fd5b506001546100c8906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6100a66100f2366004610cf0565b610117565b34801561010357600080fd5b506002546100c8906001600160a01b031681565b6002600054141561016a5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161009d565b600260005534156101df57600160009054906101000a90046001600160a01b03166001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b1580156101c557600080fd5b505af11580156101d9573d6000803e3d6000fd5b50505050505b60005b825181101561037c5760008382815181106101ff576101ff610e7a565b6020026020010151905060006001600160a01b031681602001516001600160a01b0316146103305780602001516001600160a01b0316336001600160a01b031614806102cd57506002546020820151604051635b1b1e7960e11b81526001600160a01b03918216600482015233602482015291169063b6363cf29060440160206040518083038186803b15801561029557600080fd5b505afa1580156102a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102cd9190610e90565b6103305760405162461bcd60e51b815260206004820152602e60248201527f50617961626c6550726f7879436f6e74726f6c6c65723a2063616e6e6f74206560448201526d03c32b1baba329030b1ba34b7b7160951b606482015260840161009d565b60098151600a81111561034557610345610eb2565b1415610369576040810151600154610369916001600160a01b0390911690346106d2565b508061037481610ede565b9150506101e2565b506002546040516355e2e27b60e11b81526001600160a01b039091169063abc5c4f6906103ad908590600401610fe7565b600060405180830381600087803b1580156103c757600080fd5b505af11580156103db573d6000803e3d6000fd5b50506001546040516370a0823160e01b8152306004820152600093506001600160a01b0390911691506370a082319060240160206040518083038186803b15801561042557600080fd5b505afa158015610439573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045d91906110d4565b90508015610553576001600160a01b0382166104e15760405162461bcd60e51b815260206004820152603760248201527f50617961626c6550726f7879436f6e74726f6c6c65723a2063616e6e6f74207360448201527f656e642045544820746f2061646472657373207a65726f000000000000000000606482015260840161009d565b600154604051632e1a7d4d60e01b8152600481018390526001600160a01b0390911690632e1a7d4d90602401600060405180830381600087803b15801561052757600080fd5b505af115801561053b573d6000803e3d6000fd5b50610553925050506001600160a01b03831682610799565b5050600160005550565b8015806105e65750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b1580156105ac57600080fd5b505afa1580156105c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e491906110d4565b155b6106515760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b606482015260840161009d565b6040516001600160a01b0383166024820152604481018290526106b490849063095ea7b360e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526108b2565b505050565b60606106c88484600085610984565b90505b9392505050565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e9060440160206040518083038186803b15801561071e57600080fd5b505afa158015610732573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075691906110d4565b61076091906110ed565b6040516001600160a01b03851660248201526044810182905290915061079390859063095ea7b360e01b9060640161067d565b50505050565b804710156107e95760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015260640161009d565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610836576040519150601f19603f3d011682016040523d82523d6000602084013e61083b565b606091505b50509050806106b45760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d61792068617665207265766572746564000000000000606482015260840161009d565b6000610907826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166106b99092919063ffffffff16565b8051909150156106b457808060200190518101906109259190610e90565b6106b45760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161009d565b6060824710156109e55760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161009d565b843b610a335760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161009d565b600080866001600160a01b03168587604051610a4f9190611105565b60006040518083038185875af1925050503d8060008114610a8c576040519150601f19603f3d011682016040523d82523d6000602084013e610a91565b606091505b5091509150610aa1828286610aac565b979650505050505050565b60608315610abb5750816106cb565b825115610acb5782518084602001fd5b8160405162461bcd60e51b815260040161009d9190611121565b634e487b7160e01b600052604160045260246000fd5b604051610100810167ffffffffffffffff81118282101715610b1f57610b1f610ae5565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610b4e57610b4e610ae5565b604052919050565b600067ffffffffffffffff821115610b7057610b70610ae5565b5060051b60200190565b8035600b8110610b8957600080fd5b919050565b6001600160a01b0381168114610ba357600080fd5b50565b8035610b8981610b8e565b600082601f830112610bc257600080fd5b81356020610bd7610bd283610b56565b610b25565b82815260059290921b84018101918181019086841115610bf657600080fd5b8286015b84811015610c1a578035610c0d81610b8e565b8352918301918301610bfa565b509695505050505050565b600082601f830112610c3657600080fd5b81356020610c46610bd283610b56565b82815260059290921b84018101918181019086841115610c6557600080fd5b8286015b84811015610c1a5780358352918301918301610c69565b600082601f830112610c9157600080fd5b813567ffffffffffffffff811115610cab57610cab610ae5565b610cbe601f8201601f1916602001610b25565b818152846020838601011115610cd357600080fd5b816020850160208301376000918101602001919091529392505050565b60008060408385031215610d0357600080fd5b823567ffffffffffffffff80821115610d1b57600080fd5b818501915085601f830112610d2f57600080fd5b81356020610d3f610bd283610b56565b82815260059290921b84018101918181019089841115610d5e57600080fd5b8286015b84811015610e5d57803586811115610d7957600080fd5b8701610100818d03601f1901811315610d9157600080fd5b610d99610afb565b610da4878401610b7a565b8152610db260408401610ba6565b87820152610dc260608401610ba6565b6040820152608083013589811115610dd957600080fd5b610de78f8983870101610bb1565b60608301525060a0830135608082015260c083013589811115610e0a5760008081fd5b610e188f8983870101610c25565b60a08301525060e08381013560c0830152918301359189831115610e3c5760008081fd5b610e4a8f8985870101610c80565b9082015285525050918301918301610d62565b509650610e6d9050878201610ba6565b9450505050509250929050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610ea257600080fd5b815180151581146106cb57600080fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415610ef257610ef2610ec8565b5060010190565b600b8110610f1757634e487b7160e01b600052602160045260246000fd5b9052565b600081518084526020808501945080840160005b83811015610f545781516001600160a01b031687529582019590820190600101610f2f565b509495945050505050565b600081518084526020808501945080840160005b83811015610f5457815187529582019590820190600101610f73565b60005b83811015610faa578181015183820152602001610f92565b838111156107935750506000910152565b60008151808452610fd3816020860160208601610f8f565b601f01601f19169290920160200192915050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156110c657603f19898403018552815161010061102f858351610ef9565b888201516001600160a01b03908116868b015288830151168886015260608083015181870183905261106383880182610f1b565b92505050608080830151818701525060a080830151868303828801526110898382610f5f565b9250505060c080830151818701525060e080830151925085820381870152506110b28183610fbb565b96890196945050509086019060010161100e565b509098975050505050505050565b6000602082840312156110e657600080fd5b5051919050565b6000821982111561110057611100610ec8565b500190565b60008251611117818460208701610f8f565b9190910192915050565b6020815260006106cb6020830184610fbb56fea26469706673582212203065e57377e32eda65d29c02b42edaaddb353017b20a725390f2d177dde6eb5e64736f6c63430008090033";

type PayableProxyControllerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PayableProxyControllerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PayableProxyController__factory extends ContractFactory {
  constructor(...args: PayableProxyControllerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _controller: string,
    _marginPool: string,
    _weth: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PayableProxyController> {
    return super.deploy(
      _controller,
      _marginPool,
      _weth,
      overrides || {}
    ) as Promise<PayableProxyController>;
  }
  getDeployTransaction(
    _controller: string,
    _marginPool: string,
    _weth: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _controller,
      _marginPool,
      _weth,
      overrides || {}
    );
  }
  attach(address: string): PayableProxyController {
    return super.attach(address) as PayableProxyController;
  }
  connect(signer: Signer): PayableProxyController__factory {
    return super.connect(signer) as PayableProxyController__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PayableProxyControllerInterface {
    return new utils.Interface(_abi) as PayableProxyControllerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PayableProxyController {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PayableProxyController;
  }
}
