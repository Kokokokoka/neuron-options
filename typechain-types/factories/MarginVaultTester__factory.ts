/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MarginVaultTester,
  MarginVaultTesterInterface,
} from "../MarginVaultTester";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_vaultIndex",
        type: "uint256",
      },
    ],
    name: "getVault",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "shortOtoken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longOtoken",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "collateralAssets",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "shortAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "longAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "usedLongAmount",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "collateralAmounts",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "usedCollateralAmounts",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "reservedCollateralValues",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "unusedCollateralAmounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct MarginVault.Vault",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_vaultIndex",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "_collateralAssets",
        type: "address[]",
      },
    ],
    name: "initCollaterals",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_vaultIndex",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "_collateralAssets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
    ],
    name: "testAddCollaterals",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_vaultIndex",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_longOtoken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "testAddLong",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_vaultIndex",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_shortOtoken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "testAddShort",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_vaultIndex",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_collateralAsset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "testRemoveCollateral",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_vaultIndex",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_longOtoken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "testRemoveLong",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b6b806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806349f87f621161005b57806349f87f62146100bd5780637cb26bd1146100d05780639403b634146100e3578063d4ff1cb61461010c57600080fd5b806337079420146100825780633ef3feaf1461009757806342cca35d146100aa575b600080fd5b610095610090366004610781565b61011f565b005b6100956100a53660046107b6565b6101b8565b6100956100b8366004610781565b610258565b6100956100cb36600461083d565b6102c0565b6100956100de366004610889565b610371565b6100f66100f1366004610903565b6103ff565b6040516101039190610990565b60405180910390f35b61009561011a366004610781565b610685565b3360009081526020818152604080832086845290915290819020905163bc59bba760e01b815260048101919091526001600160a01b03831660248201526044810182905273__$f483377b159a5ea0e3632e216689e4fd4e$__9063bc59bba7906064015b60006040518083038186803b15801561019b57600080fd5b505af41580156101af573d6000803e3d6000fd5b50505050505050565b33600090815260208181526040808320878452909152908190209051630380bfdd60e61b815260048101919091526001600160a01b0384166024820152604481018390526064810182905273__$f483377b159a5ea0e3632e216689e4fd4e$__9063e02ff7409060840160006040518083038186803b15801561023a57600080fd5b505af415801561024e573d6000803e3d6000fd5b5050505050505050565b3360009081526020818152604080832086845290915290819020905163032cb12d60e41b815260048101919091526001600160a01b03831660248201526044810182905273__$f483377b159a5ea0e3632e216689e4fd4e$__906332cb12d090606401610183565b33600090815260208181526040808320868452909152902060060154156102e657600080fd5b33600090815260208181526040808320868452909152902061030c9060020183836106ed565b5060005b8181101561036b5733600090815260208181526040808320878452825282206006810180546001808201835591855283852001849055600990910180549182018155835290822001558061036381610a83565b915050610310565b50505050565b33600090815260208181526040808320888452909152908190209051633233079960e11b815273__$f483377b159a5ea0e3632e216689e4fd4e$__916364660f32916103c891908890889088908890600401610aac565b60006040518083038186803b1580156103e057600080fd5b505af41580156103f4573d6000803e3d6000fd5b505050505050505050565b61046760405180610140016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160608152602001600081526020016000815260200160008152602001606081526020016060815260200160608152602001606081525090565b3360009081526020818152604080832085845282529182902082516101408101845281546001600160a01b03908116825260018301541681840152600282018054855181860281018601875281815292959394938601938301828280156104f757602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116104d9575b505050505081526020016003820154815260200160048201548152602001600582015481526020016006820180548060200260200160405190810160405280929190818152602001828054801561056d57602002820191906000526020600020905b815481526020019060010190808311610559575b50505050508152602001600782018054806020026020016040519081016040528092919081815260200182805480156105c557602002820191906000526020600020905b8154815260200190600101908083116105b1575b505050505081526020016008820180548060200260200160405190810160405280929190818152602001828054801561061d57602002820191906000526020600020905b815481526020019060010190808311610609575b505050505081526020016009820180548060200260200160405190810160405280929190818152602001828054801561067557602002820191906000526020600020905b815481526020019060010190808311610661575b5050505050815250509050919050565b336000908152602081815260408083208684529091529081902090516353f9de9f60e01b815260048101919091526001600160a01b03831660248201526044810182905273__$f483377b159a5ea0e3632e216689e4fd4e$__906353f9de9f90606401610183565b828054828255906000526020600020908101928215610740579160200282015b828111156107405781546001600160a01b0319166001600160a01b0384351617825560209092019160019091019061070d565b5061074c929150610750565b5090565b5b8082111561074c5760008155600101610751565b80356001600160a01b038116811461077c57600080fd5b919050565b60008060006060848603121561079657600080fd5b833592506107a660208501610765565b9150604084013590509250925092565b600080600080608085870312156107cc57600080fd5b843593506107dc60208601610765565b93969395505050506040820135916060013590565b60008083601f84011261080357600080fd5b50813567ffffffffffffffff81111561081b57600080fd5b6020830191508360208260051b850101111561083657600080fd5b9250929050565b60008060006040848603121561085257600080fd5b83359250602084013567ffffffffffffffff81111561087057600080fd5b61087c868287016107f1565b9497909650939450505050565b6000806000806000606086880312156108a157600080fd5b85359450602086013567ffffffffffffffff808211156108c057600080fd5b6108cc89838a016107f1565b909650945060408801359150808211156108e557600080fd5b506108f2888289016107f1565b969995985093965092949392505050565b60006020828403121561091557600080fd5b5035919050565b600081518084526020808501945080840160005b838110156109555781516001600160a01b031687529582019590820190600101610930565b509495945050505050565b600081518084526020808501945080840160005b8381101561095557815187529582019590820190600101610974565b602081526109aa6020820183516001600160a01b03169052565b600060208301516109c660408401826001600160a01b03169052565b5060408301516101408060608501526109e361016085018361091c565b915060608501516080850152608085015160a085015260a085015160c085015260c0850151601f19808685030160e0870152610a1f8483610960565b935060e08701519150610100818786030181880152610a3e8584610960565b945080880151925050610120818786030181880152610a5d8584610960565b908801518782039092018488015293509050610a798382610960565b9695505050505050565b6000600019821415610aa557634e487b7160e01b600052601160045260246000fd5b5060010190565b85815260606020808301829052908201859052600090869060808401835b88811015610af6576001600160a01b03610ae385610765565b1682529282019290820190600101610aca565b5084810360408601528581526001600160fb1b03861115610b1657600080fd5b8560051b9250828783830137600092010190815297965050505050505056fea26469706673582212203ecd4613758306ea31f421848c208e78e5edea9b15b05af59d280725dda8ebf764736f6c63430008090033";

type MarginVaultTesterConstructorParams =
  | [linkLibraryAddresses: MarginVaultTesterLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarginVaultTesterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class MarginVaultTester__factory extends ContractFactory {
  constructor(...args: MarginVaultTesterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        MarginVaultTester__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: MarginVaultTesterLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$f483377b159a5ea0e3632e216689e4fd4e\\$__", "g"),
      linkLibraryAddresses["contracts/libs/MarginVault.sol:MarginVault"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MarginVaultTester> {
    return super.deploy(overrides || {}) as Promise<MarginVaultTester>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MarginVaultTester {
    return super.attach(address) as MarginVaultTester;
  }
  connect(signer: Signer): MarginVaultTester__factory {
    return super.connect(signer) as MarginVaultTester__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarginVaultTesterInterface {
    return new utils.Interface(_abi) as MarginVaultTesterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MarginVaultTester {
    return new Contract(address, _abi, signerOrProvider) as MarginVaultTester;
  }
}

export interface MarginVaultTesterLibraryAddresses {
  ["contracts/libs/MarginVault.sol:MarginVault"]: string;
}
