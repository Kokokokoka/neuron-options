/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SignedConverterTester,
  SignedConverterTesterInterface,
} from "../SignedConverterTester";

const _abi = [
  {
    inputs: [
      {
        internalType: "int256",
        name: "a",
        type: "int256",
      },
    ],
    name: "testFromInt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
    ],
    name: "testFromUint",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610184806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063395413431461003b57806389e616bb14610060575b600080fd5b61004e61004936600461010a565b610073565b60405190815260200160405180910390f35b61004e61006e36600461010a565b610084565b600061007e8261008f565b92915050565b600061007e826100a6565b6000808212156100a25761007e82610123565b5090565b6000600160ff1b82106100a25760405162461bcd60e51b815260206004820152602260248201527f4669786564506f696e74496e743235363a206f7574206f6620696e742072616e604482015261676560f01b606482015260840160405180910390fd5b60006020828403121561011c57600080fd5b5035919050565b6000600160ff1b82141561014757634e487b7160e01b600052601160045260246000fd5b506000039056fea26469706673582212205ae51e0e7d56b2dca7d32a7aa7bd0faf3ea42518537e46a48104750dad4b5c1e64736f6c63430008090033";

type SignedConverterTesterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SignedConverterTesterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SignedConverterTester__factory extends ContractFactory {
  constructor(...args: SignedConverterTesterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SignedConverterTester> {
    return super.deploy(overrides || {}) as Promise<SignedConverterTester>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SignedConverterTester {
    return super.attach(address) as SignedConverterTester;
  }
  connect(signer: Signer): SignedConverterTester__factory {
    return super.connect(signer) as SignedConverterTester__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SignedConverterTesterInterface {
    return new utils.Interface(_abi) as SignedConverterTesterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SignedConverterTester {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SignedConverterTester;
  }
}
