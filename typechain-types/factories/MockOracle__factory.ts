/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockOracle, MockOracleInterface } from "../MockOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "uint80",
        name: "_roundId",
        type: "uint80",
      },
    ],
    name: "getChainlinkRoundData",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_expiryTimestamp",
        type: "uint256",
      },
    ],
    name: "getExpiryPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
    ],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
    ],
    name: "getPricer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pricer",
        type: "address",
      },
    ],
    name: "getPricerDisputePeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pricer",
        type: "address",
      },
    ],
    name: "getPricerLockingPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_expiryTimestamp",
        type: "uint256",
      },
    ],
    name: "isDisputePeriodOver",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "isFinalized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_expiryTimestamp",
        type: "uint256",
      },
    ],
    name: "isLockingPeriodOver",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "realTimePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "address",
        name: "_pricer",
        type: "address",
      },
    ],
    name: "setAssetPricer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "uint80",
        name: "_roundId",
        type: "uint80",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "setChainlinkRoundData",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pricer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_disputePeriod",
        type: "uint256",
      },
    ],
    name: "setDisputePeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_expiryTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setExpiryPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_expiryTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_isFinalized",
        type: "bool",
      },
    ],
    name: "setExpiryPriceFinalizedAllPeiodOver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_expiryTimestamp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_result",
        type: "bool",
      },
    ],
    name: "setIsDisputePeriodOver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_expiryTimestamp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_isFinalized",
        type: "bool",
      },
    ],
    name: "setIsFinalized",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_expiryTimestamp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_result",
        type: "bool",
      },
    ],
    name: "setIsLockingPeriodOver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pricer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_lockingPeriod",
        type: "uint256",
      },
    ],
    name: "setLockingPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setRealTimePrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setStablePrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "storedPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061092c806100206000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c8063854a5bdf116100b8578063b06206321161007c578063b06206321461053a578063b7e1d14514610564578063d2f3b4e81461058d578063d9e800cd146105c6578063ee53140914610609578063f19ae7341461063d57600080fd5b8063854a5bdf146103e75780638b3cddaf1461042a5780639933cc45146104545780639a4c9dfb146104e35780639c7fe9d61461051157600080fd5b80632ecd88571161010a5780632ecd8857146102c15780633fd3ec8f1461030557806341976e091461034157806355a5bc7c146103545780635fdc714914610374578063601407eb146103bd57600080fd5b806301957f81146101475780630701c02114610174578063098a03d1146101ad5780631379b23a146102225780631b85462d14610267575b600080fd5b61015a61015536600461072c565b610667565b604080519283529015156020830152015b60405180910390f35b61019f61018236600461072c565b600160209081526000928352604080842090915290825290205481565b60405190815260200161016b565b61020d6101bb366004610770565b6001600160a01b03909316600081815260096020908152604080832069ffffffffffffffffffff90961680845295825280832094909455918152600a8252828120938152929052812091909155908190565b6040805192835260208301919091520161016b565b6102656102303660046107c2565b6001600160a01b0392909216600090815260086020908152604080832093835292905220805460ff1916911515919091179055565b005b61020d6102753660046107fe565b6001600160a01b038216600081815260096020908152604080832069ffffffffffffffffffff861680855290835281842054948452600a83528184209084529091529020549250929050565b6102ed6102cf366004610831565b6001600160a01b039081166000908152600660205260409020541690565b6040516001600160a01b03909116815260200161016b565b610265610313366004610853565b6001600160a01b03918216600090815260066020526040902080546001600160a01b03191691909216179055565b61019f61034f366004610831565b6106d1565b61019f610362366004610831565b60006020819052908152604090205481565b6103ad61038236600461072c565b6001600160a01b03919091166000908152600760209081526040808320938352929052205460ff1690565b604051901515815260200161016b565b6102656103cb36600461072c565b6001600160a01b03909116600090815260026020526040902055565b6102656103f53660046107c2565b6001600160a01b0392909216600090815260076020908152604080832093835292905220805460ff1916911515919091179055565b61026561043836600461072c565b6001600160a01b03909116600090815260056020526040902055565b61026561046236600461087d565b6001600160a01b039093166000818152600160209081526040808320868452825280832094909455828252600381528382208583528152838220805496151560ff1997881681179091558383526007825284832086845282528483208054881682179055928252600881528382209482529390935291208054909216179055565b6103ad6104f136600461072c565b600360209081526000928352604080842090915290825290205460ff1681565b61019f61051f366004610831565b6001600160a01b031660009081526005602052604090205490565b61026561054836600461072c565b6001600160a01b03909116600090815260208190526040902055565b61019f610572366004610831565b6001600160a01b031660009081526004602052604090205490565b6103ad61059b36600461072c565b6001600160a01b03919091166000908152600860209081526040808320938352929052205460ff1690565b6102656105d43660046107c2565b6001600160a01b0392909216600090815260036020908152604080832093835292905220805460ff1916911515919091179055565b6102656106173660046108c3565b6001600160a01b0390921660009081526001602090815260408083209383529290522055565b61026561064b36600461072c565b6001600160a01b03909116600090815260046020526040902055565b6001600160a01b03821660009081526002602052604081205481906001816106c65750506001600160a01b03841660008181526001602090815260408083208784528252808320549383526003825280832087845290915290205460ff165b909590945092505050565b6001600160a01b0381166000908152600260205260408120548061070a57506001600160a01b0382166000908152602081905260409020545b92915050565b80356001600160a01b038116811461072757600080fd5b919050565b6000806040838503121561073f57600080fd5b61074883610710565b946020939093013593505050565b803569ffffffffffffffffffff8116811461072757600080fd5b6000806000806080858703121561078657600080fd5b61078f85610710565b935061079d60208601610756565b93969395505050506040820135916060013590565b8035801515811461072757600080fd5b6000806000606084860312156107d757600080fd5b6107e084610710565b9250602084013591506107f5604085016107b2565b90509250925092565b6000806040838503121561081157600080fd5b61081a83610710565b915061082860208401610756565b90509250929050565b60006020828403121561084357600080fd5b61084c82610710565b9392505050565b6000806040838503121561086657600080fd5b61086f83610710565b915061082860208401610710565b6000806000806080858703121561089357600080fd5b61089c85610710565b935060208501359250604085013591506108b8606086016107b2565b905092959194509250565b6000806000606084860312156108d857600080fd5b6108e184610710565b9560208501359550604090940135939250505056fea2646970667358221220b0db7e8127345c7d207657d5f4630c07756cec560fa897aa511eea0a9782d28b64736f6c63430008090033";

type MockOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockOracle__factory extends ContractFactory {
  constructor(...args: MockOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockOracle> {
    return super.deploy(overrides || {}) as Promise<MockOracle>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockOracle {
    return super.attach(address) as MockOracle;
  }
  connect(signer: Signer): MockOracle__factory {
    return super.connect(signer) as MockOracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockOracleInterface {
    return new utils.Interface(_abi) as MockOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockOracle {
    return new Contract(address, _abi, signerOrProvider) as MockOracle;
  }
}
