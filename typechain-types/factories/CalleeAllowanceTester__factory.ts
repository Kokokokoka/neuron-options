/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CalleeAllowanceTester,
  CalleeAllowanceTesterInterface,
} from "../CalleeAllowanceTester";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_weth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "callFunction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "weth",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516105d83803806105d883398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610545806100936000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80633fc8cef31461003b5780639c23da501461006a575b600080fd5b60005461004e906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b61007d610078366004610380565b61007f565b005b600080828060200190518101906100969190610444565b60005491935091506100b3906001600160a01b03168330846100b9565b50505050565b604080516001600160a01b038581166024830152848116604483015260648083018590528351808403909101815260849092018352602080830180516001600160e01b03166323b872dd60e01b17905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564908401526100b3928792916000916101519185169084906101d8565b8051909150156101d3578080602001905181019061016f9190610472565b6101d35760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084015b60405180910390fd5b505050565b60606101e784846000856101f1565b90505b9392505050565b6060824710156102525760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016101ca565b843b6102a05760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016101ca565b600080866001600160a01b031685876040516102bc91906104c0565b60006040518083038185875af1925050503d80600081146102f9576040519150601f19603f3d011682016040523d82523d6000602084013e6102fe565b606091505b509150915061030e828286610319565b979650505050505050565b606083156103285750816101ea565b8251156103385782518084602001fd5b8160405162461bcd60e51b81526004016101ca91906104dc565b6001600160a01b038116811461036757600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561039357600080fd5b823561039e81610352565b9150602083013567ffffffffffffffff808211156103bb57600080fd5b818501915085601f8301126103cf57600080fd5b8135818111156103e1576103e161036a565b604051601f8201601f19908116603f011681019083821181831017156104095761040961036a565b8160405282815288602084870101111561042257600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6000806040838503121561045757600080fd5b825161046281610352565b6020939093015192949293505050565b60006020828403121561048457600080fd5b815180151581146101ea57600080fd5b60005b838110156104af578181015183820152602001610497565b838111156100b35750506000910152565b600082516104d2818460208701610494565b9190910192915050565b60208152600082518060208401526104fb816040850160208701610494565b601f01601f1916919091016040019291505056fea2646970667358221220784fbab34a6a21cbeee4b32fdb7ae265650aaa4ce9a8ed236c77af9af52d913964736f6c63430008090033";

type CalleeAllowanceTesterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CalleeAllowanceTesterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CalleeAllowanceTester__factory extends ContractFactory {
  constructor(...args: CalleeAllowanceTesterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _weth: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CalleeAllowanceTester> {
    return super.deploy(
      _weth,
      overrides || {}
    ) as Promise<CalleeAllowanceTester>;
  }
  getDeployTransaction(
    _weth: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_weth, overrides || {});
  }
  attach(address: string): CalleeAllowanceTester {
    return super.attach(address) as CalleeAllowanceTester;
  }
  connect(signer: Signer): CalleeAllowanceTester__factory {
    return super.connect(signer) as CalleeAllowanceTester__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CalleeAllowanceTesterInterface {
    return new utils.Interface(_abi) as CalleeAllowanceTesterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CalleeAllowanceTester {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CalleeAllowanceTester;
  }
}
