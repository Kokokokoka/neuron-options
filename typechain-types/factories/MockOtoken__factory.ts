/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockOtoken, MockOtokenInterface } from "../MockOtoken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnOtoken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "collateralAssets",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "collateralsAmounts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "collateralsValues",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "collaterizedTotalAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "controller",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "expiryTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCollateralAssets",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCollateralsAmounts",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCollateralsValues",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOtokenDetails",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addressBook",
        type: "address",
      },
      {
        internalType: "address",
        name: "_underlyingAsset",
        type: "address",
      },
      {
        internalType: "address",
        name: "_strikeAsset",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_collateralAssets",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "_strikePrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_expiryTimestamp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_isPut",
        type: "bool",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isPut",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "collateralsAmountsForMint",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "collateralsValuesForMint",
        type: "uint256[]",
      },
    ],
    name: "mintOtoken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "collateralsAmountsForReduce",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "collateralsValuesForReduce",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "oTokenAmountBurnt",
        type: "uint256",
      },
    ],
    name: "reduceCollaterization",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "strikeAsset",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "strikePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "underlyingAsset",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061252a806100206000396000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c806395d89b411161010f578063bec2cd9b116100a2578063dda3697211610071578063dda3697214610448578063f3c274a61461045b578063f7165fee14610468578063f77c47911461047b57600080fd5b8063bec2cd9b146103eb578063c52987cf146103f3578063d505accf146103fc578063dd62ed3e1461040f57600080fd5b8063abcc2e15116100de578063abcc2e151461039d578063ade6e2aa146103b2578063af0968fc146103bb578063b604cf44146103d857600080fd5b806395d89b411461035a578063a1ff9bee14610362578063a457c2d714610377578063a9059cbb1461038a57600080fd5b8063395093511161018757806370a082311161015657806370a08231146103025780637158da7c1461032b5780637ecebe001461033e5780638bdb72671461035157600080fd5b806339509351146102b45780634e491fb9146102c75780635697e336146102dc57806356d878f7146102ef57600080fd5b806318160ddd116101c357806318160ddd1461028257806323b872dd1461028a578063313ce5671461029d5780633644e515146102ac57600080fd5b806306fdde03146101f5578063084fae2114610213578063095ea7b31461023457806317d69bc814610257575b600080fd5b6101fd61048e565b60405161020a9190611e87565b60405180910390f35b610226610221366004611edc565b610520565b60405190815260200161020a565b610247610242366004611f0a565b610541565b604051901515815260200161020a565b60cf5461026a906001600160a01b031681565b6040516001600160a01b03909116815260200161020a565b603554610226565b610247610298366004611f36565b610557565b6040516008815260200161020a565b610226610606565b6102476102c2366004611f0a565b610615565b6102da6102d5366004611fc3565b610651565b005b6102da6102ea366004612037565b610860565b6102da6102fd366004611f0a565b610a65565b6102266103103660046120c3565b6001600160a01b031660009081526033602052604090205490565b60ce5461026a906001600160a01b031681565b61022661034c3660046120c3565b610a9d565b61022660cc5481565b6101fd610abd565b61036a610acc565b60405161020a9190612124565b610247610385366004611f0a565b610b2d565b610247610398366004611f0a565b610bc6565b6103a5610bd3565b60405161020a9190612167565b61022660d45481565b6103c3610c2a565b60405161020a9998979695949392919061217a565b6102da6103e63660046121f6565b610da0565b6103a5611129565b61022660d35481565b6102da61040a36600461229d565b61117f565b61022661041d366004612314565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b610226610456366004611edc565b6112c5565b60d5546102479060ff1681565b61026a610476366004611edc565b6112d5565b60cd5461026a906001600160a01b031681565b60606036805461049d9061234d565b80601f01602080910402602001604051908101604052809291908181526020018280546104c99061234d565b80156105165780601f106104eb57610100808354040283529160200191610516565b820191906000526020600020905b8154815290600101906020018083116104f957829003601f168201915b5050505050905090565b60d1818154811061053057600080fd5b600091825260209091200154905081565b600061054e3384846112ff565b50600192915050565b6000610564848484611424565b6001600160a01b0384166000908152603460209081526040808320338452909152902054828110156105ee5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6105fb85338584036112ff565b506001949350505050565b60006106106115f3565b905090565b3360008181526034602090815260408083206001600160a01b0387168452909152812054909161054e91859061064c908690612398565b6112ff565b60cd546001600160a01b0316331461067b5760405162461bcd60e51b81526004016105e5906123b0565b60d05482146106f75760405162461bcd60e51b815260206004820152604e60248201526000805160206124d583398151915260448201527f6c61746572616c7356616c756573466f72526564756365206d7573742062652060648201526d0decc40e6c2daca40d8cadccee8d60931b608482015260a4016105e5565b60d05484146107745760405162461bcd60e51b815260206004820152604f60248201526000805160206124d583398151915260448201527f6c61746572616c73416d6f756e7473466f72526564756365206d75737420626560648201526e040decc40e6c2daca40d8cadccee8d608b1b608482015260a4016105e5565b60005b60d054811015610848576107c9848483818110610796576107966123f8565b9050602002013560d283815481106107b0576107b06123f8565b906000526020600020015461166e90919063ffffffff16565b60d282815481106107dc576107dc6123f8565b6000918252602090912001556108178686838181106107fd576107fd6123f8565b9050602002013560d183815481106107b0576107b06123f8565b60d1828154811061082a5761082a6123f8565b600091825260209091200155806108408161240e565b915050610777565b5060cc54610856908261166e565b60cc555050505050565b60d05481146108da5760405162461bcd60e51b815260206004820152604c60248201526000805160206124d583398151915260448201527f6c61746572616c7356616c756573466f724d696e74206d757374206265206f6660648201526b040e6c2daca40d8cadccee8d60a31b608482015260a4016105e5565b60d05483146109555760405162461bcd60e51b815260206004820152604d60248201526000805160206124d583398151915260448201527f6c61746572616c73416d6f756e7473466f724d696e74206d757374206265206f60648201526c0cc40e6c2daca40d8cadccee8d609b1b608482015260a4016105e5565b60005b60d054811015610a42576109aa60d28281548110610978576109786123f8565b9060005260206000200154848484818110610995576109956123f8565b9050602002013561168190919063ffffffff16565b60d282815481106109bd576109bd6123f8565b600091825260209091200155610a118585838181106109de576109de6123f8565b9050602002013560d183815481106109f8576109f86123f8565b906000526020600020015461168190919063ffffffff16565b60d18281548110610a2457610a246123f8565b60009182526020909120015580610a3a8161240e565b915050610958565b5060cc54610a509086611681565b60cc55610a5d868661168d565b505050505050565b60cd546001600160a01b03163314610a8f5760405162461bcd60e51b81526004016105e5906123b0565b610a99828261176c565b5050565b6001600160a01b0381166000908152609960205260408120545b92915050565b60606037805461049d9061234d565b606060d080548060200260200160405190810160405280929190818152602001828054801561051657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610b06575050505050905090565b3360009081526034602090815260408083206001600160a01b038616845290915281205482811015610baf5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016105e5565b610bbc33858584036112ff565b5060019392505050565b600061054e338484611424565b606060d180548060200260200160405190810160405280929190818152602001828054801561051657602002820191906000526020600020905b815481526020019060010190808311610c0d575050505050905090565b606080606060008060008060008060d060d160d260ce60009054906101000a90046001600160a01b031660cf60009054906101000a90046001600160a01b031660d35460d45460d560009054906101000a900460ff1660cc5488805480602002602001604051908101604052809291908181526020018280548015610cd857602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610cba575b5050505050985087805480602002602001604051908101604052809291908181526020018280548015610d2a57602002820191906000526020600020905b815481526020019060010190808311610d16575b5050505050975086805480602002602001604051908101604052809291908181526020018280548015610d7c57602002820191906000526020600020905b815481526020019060010190808311610d68575b50505050509650985098509850985098509850985098509850909192939495969798565b600054610100900460ff16610dbb5760005460ff1615610dbf565b303b155b610e225760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105e5565b600054610100900460ff16158015610e44576000805461ffff19166101011790555b84610e9c5760405162461bcd60e51b815260206004820152602260248201527f636f6c6c61746572616c417373657473206d757374206265206e6f6e2d656d70604482015261747960f01b60648201526084016105e5565b6006851115610f215760405162461bcd60e51b8152602060048201526044602482018190527f636f6c6c61746572616c417373657473206d757374206265206c657373207468908201527f616e206f7220657175616c20746f204d41585f434f4c4c41544552414c5f41536064820152635345545360e01b608482015260a4016105e5565b886001600160a01b0316633018205f6040518163ffffffff1660e01b815260040160206040518083038186803b158015610f5a57600080fd5b505afa158015610f6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f929190612429565b60cd80546001600160a01b03199081166001600160a01b039384161790915560ce805482168b841617905560cf8054909116918916919091179055610fd960d08787611d61565b5060d05467ffffffffffffffff811115610ff557610ff5612446565b60405190808252806020026020018201604052801561101e578160200160208202803683370190505b5080516110339160d191602090910190611dc4565b5060d05467ffffffffffffffff81111561104f5761104f612446565b604051908082528060200260200182016040528015611078578160200160208202803683370190505b50805161108d9160d291602090910190611dc4565b5060d384905560d483905560d5805483151560ff199091161790556000806110f36040805180820182526009815268746f6b656e4e616d6560b81b6020808301919091528251808401909352600b83526a1d1bdad95b94de5b589bdb60aa1b9083015291565b9150915061110182826118b7565b61110a82611905565b5050801561111e576000805461ff00191690555b505050505050505050565b606060d28054806020026020016040519081016040528092919081815260200182805480156105165760200282019190600052602060002090815481526020019060010190808311610c0d575050505050905090565b834211156111cf5760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016105e5565b6000609a548888886111e08c611963565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e001604051602081830303815290604052805190602001209050600061123b8261198b565b9050600061124b828787876119d9565b9050896001600160a01b0316816001600160a01b0316146112ae5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016105e5565b6112b98a8a8a6112ff565b50505050505050505050565b60d2818154811061053057600080fd5b60d081815481106112e557600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b0383166113615760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105e5565b6001600160a01b0382166113c25760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105e5565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166114885760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105e5565b6001600160a01b0382166114ea5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105e5565b6001600160a01b038316600090815260336020526040902054818110156115625760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016105e5565b6001600160a01b03808516600090815260336020526040808220858503905591851681529081208054849290611599908490612398565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516115e591815260200190565b60405180910390a350505050565b60006106107f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f61162260655490565b6066546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b600061167a828461245c565b9392505050565b600061167a8284612398565b6001600160a01b0382166116e35760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016105e5565b80603560008282546116f59190612398565b90915550506001600160a01b03821660009081526033602052604081208054839290611722908490612398565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b0382166117cc5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016105e5565b6001600160a01b038216600090815260336020526040902054818110156118405760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016105e5565b6001600160a01b038316600090815260336020526040812083830390556035805484929061186f90849061245c565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001611417565b505050565b600054610100900460ff166118de5760405162461bcd60e51b81526004016105e590612473565b81516118f1906036906020850190611dff565b5080516118b2906037906020840190611dff565b600054610100900460ff1661192c5760405162461bcd60e51b81526004016105e590612473565b611934611a01565b61195781604051806040016040528060018152602001603160f81b815250611a2a565b61196081611a6b565b50565b6001600160a01b03811660009081526099602052604090208054600181018255905b50919050565b6000610ab76119986115f3565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b60008060006119ea87878787611ab9565b915091506119f781611ba6565b5095945050505050565b600054610100900460ff16611a285760405162461bcd60e51b81526004016105e590612473565b565b600054610100900460ff16611a515760405162461bcd60e51b81526004016105e590612473565b815160209283012081519190920120606591909155606655565b600054610100900460ff16611a925760405162461bcd60e51b81526004016105e590612473565b507f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9609a55565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611af05750600090506003611b9d565b8460ff16601b14158015611b0857508460ff16601c14155b15611b195750600090506004611b9d565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611b6d573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611b9657600060019250925050611b9d565b9150600090505b94509492505050565b6000816004811115611bba57611bba6124be565b1415611bc35750565b6001816004811115611bd757611bd76124be565b1415611c255760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016105e5565b6002816004811115611c3957611c396124be565b1415611c875760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016105e5565b6003816004811115611c9b57611c9b6124be565b1415611cf45760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016105e5565b6004816004811115611d0857611d086124be565b14156119605760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016105e5565b828054828255906000526020600020908101928215611db4579160200282015b82811115611db45781546001600160a01b0319166001600160a01b03843516178255602090920191600190910190611d81565b50611dc0929150611e72565b5090565b828054828255906000526020600020908101928215611db4579160200282015b82811115611db4578251825591602001919060010190611de4565b828054611e0b9061234d565b90600052602060002090601f016020900481019282611e2d5760008555611db4565b82601f10611e4657805160ff1916838001178555611db4565b82800160010185558215611db45791820182811115611db4578251825591602001919060010190611de4565b5b80821115611dc05760008155600101611e73565b600060208083528351808285015260005b81811015611eb457858101830151858201604001528201611e98565b81811115611ec6576000604083870101525b50601f01601f1916929092016040019392505050565b600060208284031215611eee57600080fd5b5035919050565b6001600160a01b038116811461196057600080fd5b60008060408385031215611f1d57600080fd5b8235611f2881611ef5565b946020939093013593505050565b600080600060608486031215611f4b57600080fd5b8335611f5681611ef5565b92506020840135611f6681611ef5565b929592945050506040919091013590565b60008083601f840112611f8957600080fd5b50813567ffffffffffffffff811115611fa157600080fd5b6020830191508360208260051b8501011115611fbc57600080fd5b9250929050565b600080600080600060608688031215611fdb57600080fd5b853567ffffffffffffffff80821115611ff357600080fd5b611fff89838a01611f77565b9097509550602088013591508082111561201857600080fd5b5061202588828901611f77565b96999598509660400135949350505050565b6000806000806000806080878903121561205057600080fd5b863561205b81611ef5565b955060208701359450604087013567ffffffffffffffff8082111561207f57600080fd5b61208b8a838b01611f77565b909650945060608901359150808211156120a457600080fd5b506120b189828a01611f77565b979a9699509497509295939492505050565b6000602082840312156120d557600080fd5b813561167a81611ef5565b600081518084526020808501945080840160005b838110156121195781516001600160a01b0316875295820195908201906001016120f4565b509495945050505050565b60208152600061167a60208301846120e0565b600081518084526020808501945080840160005b838110156121195781518752958201959082019060010161214b565b60208152600061167a6020830184612137565b600061012080835261218e8184018d6120e0565b905082810360208401526121a2818c612137565b905082810360408401526121b6818b612137565b6001600160a01b03998a1660608501529790981660808301525060a081019490945260c0840192909252151560e083015261010090910152949350505050565b60008060008060008060008060e0898b03121561221257600080fd5b883561221d81611ef5565b9750602089013561222d81611ef5565b9650604089013561223d81611ef5565b9550606089013567ffffffffffffffff81111561225957600080fd5b6122658b828c01611f77565b9096509450506080890135925060a0890135915060c0890135801515811461228c57600080fd5b809150509295985092959890939650565b600080600080600080600060e0888a0312156122b857600080fd5b87356122c381611ef5565b965060208801356122d381611ef5565b95506040880135945060608801359350608088013560ff811681146122f757600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561232757600080fd5b823561233281611ef5565b9150602083013561234281611ef5565b809150509250929050565b600181811c9082168061236157607f821691505b6020821081141561198557634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156123ab576123ab612382565b500190565b60208082526028908201527f4f746f6b656e3a204f6e6c7920436f6e74726f6c6c65722063616e206275726e604082015267204f746f6b656e7360c01b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b600060001982141561242257612422612382565b5060010190565b60006020828403121561243b57600080fd5b815161167a81611ef5565b634e487b7160e01b600052604160045260246000fd5b60008282101561246e5761246e612382565b500390565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b634e487b7160e01b600052602160045260246000fdfe4f746f6b656e3a20636f6c6c61746572616c41737365747320616e6420636f6ca2646970667358221220d5bb28249e4335a336fc722003ccd65699d6b6d4b12c1379fc89d9a84f12e24e64736f6c63430008090033";

type MockOtokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockOtokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockOtoken__factory extends ContractFactory {
  constructor(...args: MockOtokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockOtoken> {
    return super.deploy(overrides || {}) as Promise<MockOtoken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockOtoken {
    return super.attach(address) as MockOtoken;
  }
  connect(signer: Signer): MockOtoken__factory {
    return super.connect(signer) as MockOtoken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockOtokenInterface {
    return new utils.Interface(_abi) as MockOtokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockOtoken {
    return new Contract(address, _abi, signerOrProvider) as MockOtoken;
  }
}
