/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockOtoken, MockOtokenInterface } from "../MockOtoken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnOtoken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "collateralAssets",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "collateralsAmounts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "collateralsValues",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "collaterizedTotalAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "controller",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "expiryTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCollateralAssets",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCollateralsAmounts",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCollateralsValues",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOtokenDetails",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addressBook",
        type: "address",
      },
      {
        internalType: "address",
        name: "_underlyingAsset",
        type: "address",
      },
      {
        internalType: "address",
        name: "_strikeAsset",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_collateralAssets",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "_strikePrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_expiryTimestamp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_isPut",
        type: "bool",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isPut",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "collateralsAmountsForMint",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "collateralsValuesForMint",
        type: "uint256[]",
      },
    ],
    name: "mintOtoken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "collateralsAmountsForReduce",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "collateralsValuesForReduce",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "oTokenAmountBurnt",
        type: "uint256",
      },
    ],
    name: "reduceCollaterization",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "strikeAsset",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "strikePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "underlyingAsset",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506124a2806100206000396000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c806395d89b411161010f578063bec2cd9b116100a2578063dda3697211610071578063dda3697214610447578063f3c274a61461045a578063f7165fee14610467578063f77c47911461047a57600080fd5b8063bec2cd9b146103ea578063c52987cf146103f2578063d505accf146103fb578063dd62ed3e1461040e57600080fd5b8063abcc2e15116100de578063abcc2e151461039d578063ade6e2aa146103b2578063af0968fc146103bb578063b604cf44146103d757600080fd5b806395d89b411461035a578063a1ff9bee14610362578063a457c2d714610377578063a9059cbb1461038a57600080fd5b8063395093511161018757806370a082311161015657806370a08231146103025780637158da7c1461032b5780637ecebe001461033e5780638bdb72671461035157600080fd5b806339509351146102b45780634e491fb9146102c75780635697e336146102dc57806356d878f7146102ef57600080fd5b806318160ddd116101c357806318160ddd1461028257806323b872dd1461028a578063313ce5671461029d5780633644e515146102ac57600080fd5b806306fdde03146101f5578063084fae2114610213578063095ea7b31461023457806317d69bc814610257575b600080fd5b6101fd61048d565b60405161020a9190611e15565b60405180910390f35b610226610221366004611e6a565b61051f565b60405190815260200161020a565b610247610242366004611e98565b610540565b604051901515815260200161020a565b60cf5461026a906001600160a01b031681565b6040516001600160a01b03909116815260200161020a565b603554610226565b610247610298366004611ec4565b610556565b6040516008815260200161020a565b610226610605565b6102476102c2366004611e98565b610614565b6102da6102d5366004611f51565b610650565b005b6102da6102ea366004611fc5565b61085f565b6102da6102fd366004611e98565b610a64565b610226610310366004612051565b6001600160a01b031660009081526033602052604090205490565b60ce5461026a906001600160a01b031681565b61022661034c366004612051565b610a9c565b61022660cc5481565b6101fd610abc565b61036a610acb565b60405161020a91906120b2565b610247610385366004611e98565b610b2c565b610247610398366004611e98565b610bc5565b6103a5610bd2565b60405161020a91906120f5565b61022660d45481565b6103c3610c29565b60405161020a989796959493929190612108565b6102da6103e536600461216e565b610d2e565b6103a56110b7565b61022660d35481565b6102da610409366004612215565b61110d565b61022661041c36600461228c565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b610226610455366004611e6a565b611253565b60d5546102479060ff1681565b61026a610475366004611e6a565b611263565b60cd5461026a906001600160a01b031681565b60606036805461049c906122c5565b80601f01602080910402602001604051908101604052809291908181526020018280546104c8906122c5565b80156105155780601f106104ea57610100808354040283529160200191610515565b820191906000526020600020905b8154815290600101906020018083116104f857829003601f168201915b5050505050905090565b60d1818154811061052f57600080fd5b600091825260209091200154905081565b600061054d33848461128d565b50600192915050565b60006105638484846113b2565b6001600160a01b0384166000908152603460209081526040808320338452909152902054828110156105ed5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6105fa853385840361128d565b506001949350505050565b600061060f611581565b905090565b3360008181526034602090815260408083206001600160a01b0387168452909152812054909161054d91859061064b908690612310565b61128d565b60cd546001600160a01b0316331461067a5760405162461bcd60e51b81526004016105e490612328565b60d05482146106f65760405162461bcd60e51b815260206004820152604e602482015260008051602061244d83398151915260448201527f6c61746572616c7356616c756573466f72526564756365206d7573742062652060648201526d0decc40e6c2daca40d8cadccee8d60931b608482015260a4016105e4565b60d05484146107735760405162461bcd60e51b815260206004820152604f602482015260008051602061244d83398151915260448201527f6c61746572616c73416d6f756e7473466f72526564756365206d75737420626560648201526e040decc40e6c2daca40d8cadccee8d608b1b608482015260a4016105e4565b60005b60d054811015610847576107c884848381811061079557610795612370565b9050602002013560d283815481106107af576107af612370565b90600052602060002001546115fc90919063ffffffff16565b60d282815481106107db576107db612370565b6000918252602090912001556108168686838181106107fc576107fc612370565b9050602002013560d183815481106107af576107af612370565b60d1828154811061082957610829612370565b6000918252602090912001558061083f81612386565b915050610776565b5060cc5461085590826115fc565b60cc555050505050565b60d05481146108d95760405162461bcd60e51b815260206004820152604c602482015260008051602061244d83398151915260448201527f6c61746572616c7356616c756573466f724d696e74206d757374206265206f6660648201526b040e6c2daca40d8cadccee8d60a31b608482015260a4016105e4565b60d05483146109545760405162461bcd60e51b815260206004820152604d602482015260008051602061244d83398151915260448201527f6c61746572616c73416d6f756e7473466f724d696e74206d757374206265206f60648201526c0cc40e6c2daca40d8cadccee8d609b1b608482015260a4016105e4565b60005b60d054811015610a41576109a960d2828154811061097757610977612370565b906000526020600020015484848481811061099457610994612370565b9050602002013561160f90919063ffffffff16565b60d282815481106109bc576109bc612370565b600091825260209091200155610a108585838181106109dd576109dd612370565b9050602002013560d183815481106109f7576109f7612370565b906000526020600020015461160f90919063ffffffff16565b60d18281548110610a2357610a23612370565b60009182526020909120015580610a3981612386565b915050610957565b5060cc54610a4f908661160f565b60cc55610a5c868661161b565b505050505050565b60cd546001600160a01b03163314610a8e5760405162461bcd60e51b81526004016105e490612328565b610a9882826116fa565b5050565b6001600160a01b0381166000908152609960205260408120545b92915050565b60606037805461049c906122c5565b606060d080548060200260200160405190810160405280929190818152602001828054801561051557602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610b05575050505050905090565b3360009081526034602090815260408083206001600160a01b038616845290915281205482811015610bae5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016105e4565b610bbb338585840361128d565b5060019392505050565b600061054d3384846113b2565b606060d180548060200260200160405190810160405280929190818152602001828054801561051557602002820191906000526020600020905b815481526020019060010190808311610c0c575050505050905090565b60ce5460cf5460d35460d45460d55460cc5460d08054604080516020808402820181019092528281526060998a996000998a998a998a998a998a99909860d1986001600160a01b03988916989097169660ff90941693918a91830182828015610cbb57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610c9d575b5050505050975086805480602002602001604051908101604052809291908181526020018280548015610d0d57602002820191906000526020600020905b815481526020019060010190808311610cf9575b50505050509650975097509750975097509750975097509091929394959697565b600054610100900460ff16610d495760005460ff1615610d4d565b303b155b610db05760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105e4565b600054610100900460ff16158015610dd2576000805461ffff19166101011790555b84610e2a5760405162461bcd60e51b815260206004820152602260248201527f636f6c6c61746572616c417373657473206d757374206265206e6f6e2d656d70604482015261747960f01b60648201526084016105e4565b6006851115610eaf5760405162461bcd60e51b8152602060048201526044602482018190527f636f6c6c61746572616c417373657473206d757374206265206c657373207468908201527f616e206f7220657175616c20746f204d41585f434f4c4c41544552414c5f41536064820152635345545360e01b608482015260a4016105e4565b886001600160a01b0316633018205f6040518163ffffffff1660e01b815260040160206040518083038186803b158015610ee857600080fd5b505afa158015610efc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f2091906123a1565b60cd80546001600160a01b03199081166001600160a01b039384161790915560ce805482168b841617905560cf8054909116918916919091179055610f6760d08787611cef565b5060d05467ffffffffffffffff811115610f8357610f836123be565b604051908082528060200260200182016040528015610fac578160200160208202803683370190505b508051610fc19160d191602090910190611d52565b5060d05467ffffffffffffffff811115610fdd57610fdd6123be565b604051908082528060200260200182016040528015611006578160200160208202803683370190505b50805161101b9160d291602090910190611d52565b5060d384905560d483905560d5805483151560ff199091161790556000806110816040805180820182526009815268746f6b656e4e616d6560b81b6020808301919091528251808401909352600b83526a1d1bdad95b94de5b589bdb60aa1b9083015291565b9150915061108f8282611845565b61109882611893565b505080156110ac576000805461ff00191690555b505050505050505050565b606060d28054806020026020016040519081016040528092919081815260200182805480156105155760200282019190600052602060002090815481526020019060010190808311610c0c575050505050905090565b8342111561115d5760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016105e4565b6000609a5488888861116e8c6118f1565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e00160405160208183030381529060405280519060200120905060006111c982611919565b905060006111d982878787611967565b9050896001600160a01b0316816001600160a01b03161461123c5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016105e4565b6112478a8a8a61128d565b50505050505050505050565b60d2818154811061052f57600080fd5b60d0818154811061127357600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b0383166112ef5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105e4565b6001600160a01b0382166113505760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105e4565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166114165760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105e4565b6001600160a01b0382166114785760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105e4565b6001600160a01b038316600090815260336020526040902054818110156114f05760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016105e4565b6001600160a01b03808516600090815260336020526040808220858503905591851681529081208054849290611527908490612310565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161157391815260200190565b60405180910390a350505050565b600061060f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6115b060655490565b6066546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b600061160882846123d4565b9392505050565b60006116088284612310565b6001600160a01b0382166116715760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016105e4565b80603560008282546116839190612310565b90915550506001600160a01b038216600090815260336020526040812080548392906116b0908490612310565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b03821661175a5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016105e4565b6001600160a01b038216600090815260336020526040902054818110156117ce5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016105e4565b6001600160a01b03831660009081526033602052604081208383039055603580548492906117fd9084906123d4565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016113a5565b505050565b600054610100900460ff1661186c5760405162461bcd60e51b81526004016105e4906123eb565b815161187f906036906020850190611d8d565b508051611840906037906020840190611d8d565b600054610100900460ff166118ba5760405162461bcd60e51b81526004016105e4906123eb565b6118c261198f565b6118e581604051806040016040528060018152602001603160f81b8152506119b8565b6118ee816119f9565b50565b6001600160a01b03811660009081526099602052604090208054600181018255905b50919050565b6000610ab6611926611581565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b600080600061197887878787611a47565b9150915061198581611b34565b5095945050505050565b600054610100900460ff166119b65760405162461bcd60e51b81526004016105e4906123eb565b565b600054610100900460ff166119df5760405162461bcd60e51b81526004016105e4906123eb565b815160209283012081519190920120606591909155606655565b600054610100900460ff16611a205760405162461bcd60e51b81526004016105e4906123eb565b507f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9609a55565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611a7e5750600090506003611b2b565b8460ff16601b14158015611a9657508460ff16601c14155b15611aa75750600090506004611b2b565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611afb573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611b2457600060019250925050611b2b565b9150600090505b94509492505050565b6000816004811115611b4857611b48612436565b1415611b515750565b6001816004811115611b6557611b65612436565b1415611bb35760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016105e4565b6002816004811115611bc757611bc7612436565b1415611c155760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016105e4565b6003816004811115611c2957611c29612436565b1415611c825760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016105e4565b6004816004811115611c9657611c96612436565b14156118ee5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016105e4565b828054828255906000526020600020908101928215611d42579160200282015b82811115611d425781546001600160a01b0319166001600160a01b03843516178255602090920191600190910190611d0f565b50611d4e929150611e00565b5090565b828054828255906000526020600020908101928215611d42579160200282015b82811115611d42578251825591602001919060010190611d72565b828054611d99906122c5565b90600052602060002090601f016020900481019282611dbb5760008555611d42565b82601f10611dd457805160ff1916838001178555611d42565b82800160010185558215611d425791820182811115611d42578251825591602001919060010190611d72565b5b80821115611d4e5760008155600101611e01565b600060208083528351808285015260005b81811015611e4257858101830151858201604001528201611e26565b81811115611e54576000604083870101525b50601f01601f1916929092016040019392505050565b600060208284031215611e7c57600080fd5b5035919050565b6001600160a01b03811681146118ee57600080fd5b60008060408385031215611eab57600080fd5b8235611eb681611e83565b946020939093013593505050565b600080600060608486031215611ed957600080fd5b8335611ee481611e83565b92506020840135611ef481611e83565b929592945050506040919091013590565b60008083601f840112611f1757600080fd5b50813567ffffffffffffffff811115611f2f57600080fd5b6020830191508360208260051b8501011115611f4a57600080fd5b9250929050565b600080600080600060608688031215611f6957600080fd5b853567ffffffffffffffff80821115611f8157600080fd5b611f8d89838a01611f05565b90975095506020880135915080821115611fa657600080fd5b50611fb388828901611f05565b96999598509660400135949350505050565b60008060008060008060808789031215611fde57600080fd5b8635611fe981611e83565b955060208701359450604087013567ffffffffffffffff8082111561200d57600080fd5b6120198a838b01611f05565b9096509450606089013591508082111561203257600080fd5b5061203f89828a01611f05565b979a9699509497509295939492505050565b60006020828403121561206357600080fd5b813561160881611e83565b600081518084526020808501945080840160005b838110156120a75781516001600160a01b031687529582019590820190600101612082565b509495945050505050565b602081526000611608602083018461206e565b600081518084526020808501945080840160005b838110156120a7578151875295820195908201906001016120d9565b60208152600061160860208301846120c5565b600061010080835261211c8184018c61206e565b90508281036020840152612130818b6120c5565b6001600160a01b03998a16604085015297909816606083015250608081019490945260a0840192909252151560c083015260e0909101529392505050565b60008060008060008060008060e0898b03121561218a57600080fd5b883561219581611e83565b975060208901356121a581611e83565b965060408901356121b581611e83565b9550606089013567ffffffffffffffff8111156121d157600080fd5b6121dd8b828c01611f05565b9096509450506080890135925060a0890135915060c0890135801515811461220457600080fd5b809150509295985092959890939650565b600080600080600080600060e0888a03121561223057600080fd5b873561223b81611e83565b9650602088013561224b81611e83565b95506040880135945060608801359350608088013560ff8116811461226f57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561229f57600080fd5b82356122aa81611e83565b915060208301356122ba81611e83565b809150509250929050565b600181811c908216806122d957607f821691505b6020821081141561191357634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115612323576123236122fa565b500190565b60208082526028908201527f4f746f6b656e3a204f6e6c7920436f6e74726f6c6c65722063616e206275726e604082015267204f746f6b656e7360c01b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b600060001982141561239a5761239a6122fa565b5060010190565b6000602082840312156123b357600080fd5b815161160881611e83565b634e487b7160e01b600052604160045260246000fd5b6000828210156123e6576123e66122fa565b500390565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b634e487b7160e01b600052602160045260246000fdfe4f746f6b656e3a20636f6c6c61746572616c41737365747320616e6420636f6ca2646970667358221220fb6cb7a5edc4d80eeffd03abcc36e206964dc3da25e03277e015fe6df83f3fae64736f6c63430008090033";

type MockOtokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockOtokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockOtoken__factory extends ContractFactory {
  constructor(...args: MockOtokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockOtoken> {
    return super.deploy(overrides || {}) as Promise<MockOtoken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockOtoken {
    return super.attach(address) as MockOtoken;
  }
  connect(signer: Signer): MockOtoken__factory {
    return super.connect(signer) as MockOtoken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockOtokenInterface {
    return new utils.Interface(_abi) as MockOtokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockOtoken {
    return new Contract(address, _abi, signerOrProvider) as MockOtoken;
  }
}
