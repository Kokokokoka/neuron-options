/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockOtoken, MockOtokenInterface } from "../MockOtoken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnOtoken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "collateralAssets",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "collateralsAmounts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "collateralsValues",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "collaterizedTotalAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "controller",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "expiryTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCollateralAssets",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCollateralsAmounts",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCollateralsValues",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOtokenDetails",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addressBook",
        type: "address",
      },
      {
        internalType: "address",
        name: "_underlyingAsset",
        type: "address",
      },
      {
        internalType: "address",
        name: "_strikeAsset",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_collateralAssets",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "_strikePrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_expiryTimestamp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_isPut",
        type: "bool",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isPut",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "collateralsAmountsForMint",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "collateralsValuesForMint",
        type: "uint256[]",
      },
    ],
    name: "mintOtoken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "collateralsAmountsForReduce",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "collateralsValuesForReduce",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "oTokenAmountBurnt",
        type: "uint256",
      },
    ],
    name: "reduceCollaterization",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "strikeAsset",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "strikePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "underlyingAsset",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061250d806100206000396000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c806395d89b411161010f578063bec2cd9b116100a2578063dda3697211610071578063dda3697214610447578063f3c274a61461045a578063f7165fee14610467578063f77c47911461047a57600080fd5b8063bec2cd9b146103ea578063c52987cf146103f2578063d505accf146103fb578063dd62ed3e1461040e57600080fd5b8063abcc2e15116100de578063abcc2e151461039d578063ade6e2aa146103b2578063af0968fc146103bb578063b604cf44146103d757600080fd5b806395d89b411461035a578063a1ff9bee14610362578063a457c2d714610377578063a9059cbb1461038a57600080fd5b8063395093511161018757806370a082311161015657806370a08231146103025780637158da7c1461032b5780637ecebe001461033e5780638bdb72671461035157600080fd5b806339509351146102b45780634e491fb9146102c75780635697e336146102dc57806356d878f7146102ef57600080fd5b806318160ddd116101c357806318160ddd1461028257806323b872dd1461028a578063313ce5671461029d5780633644e515146102ac57600080fd5b806306fdde03146101f5578063084fae2114610213578063095ea7b31461023457806317d69bc814610257575b600080fd5b6101fd61048d565b60405161020a9190611e80565b60405180910390f35b610226610221366004611ed5565b61051f565b60405190815260200161020a565b610247610242366004611f03565b610540565b604051901515815260200161020a565b60cf5461026a906001600160a01b031681565b6040516001600160a01b03909116815260200161020a565b603554610226565b610247610298366004611f2f565b610556565b6040516008815260200161020a565b610226610605565b6102476102c2366004611f03565b610614565b6102da6102d5366004611fbc565b610650565b005b6102da6102ea366004612030565b61085f565b6102da6102fd366004611f03565b610acf565b6102266103103660046120bc565b6001600160a01b031660009081526033602052604090205490565b60ce5461026a906001600160a01b031681565b61022661034c3660046120bc565b610b07565b61022660cc5481565b6101fd610b27565b61036a610b36565b60405161020a919061211d565b610247610385366004611f03565b610b97565b610247610398366004611f03565b610c30565b6103a5610c3d565b60405161020a9190612160565b61022660d45481565b6103c3610c94565b60405161020a989796959493929190612173565b6102da6103e53660046121d9565b610d99565b6103a5611122565b61022660d35481565b6102da610409366004612280565b611178565b61022661041c3660046122f7565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b610226610455366004611ed5565b6112be565b60d5546102479060ff1681565b61026a610475366004611ed5565b6112ce565b60cd5461026a906001600160a01b031681565b60606036805461049c90612330565b80601f01602080910402602001604051908101604052809291908181526020018280546104c890612330565b80156105155780601f106104ea57610100808354040283529160200191610515565b820191906000526020600020905b8154815290600101906020018083116104f857829003601f168201915b5050505050905090565b60d1818154811061052f57600080fd5b600091825260209091200154905081565b600061054d3384846112f8565b50600192915050565b600061056384848461141d565b6001600160a01b0384166000908152603460209081526040808320338452909152902054828110156105ed5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6105fa85338584036112f8565b506001949350505050565b600061060f6115ec565b905090565b3360008181526034602090815260408083206001600160a01b0387168452909152812054909161054d91859061064b90869061237b565b6112f8565b60cd546001600160a01b0316331461067a5760405162461bcd60e51b81526004016105e490612393565b60d05482146106f65760405162461bcd60e51b815260206004820152604e60248201526000805160206124b883398151915260448201527f6c61746572616c7356616c756573466f72526564756365206d7573742062652060648201526d0decc40e6c2daca40d8cadccee8d60931b608482015260a4016105e4565b60d05484146107735760405162461bcd60e51b815260206004820152604f60248201526000805160206124b883398151915260448201527f6c61746572616c73416d6f756e7473466f72526564756365206d75737420626560648201526e040decc40e6c2daca40d8cadccee8d608b1b608482015260a4016105e4565b60005b60d054811015610847576107c8848483818110610795576107956123db565b9050602002013560d283815481106107af576107af6123db565b906000526020600020015461166790919063ffffffff16565b60d282815481106107db576107db6123db565b6000918252602090912001556108168686838181106107fc576107fc6123db565b9050602002013560d183815481106107af576107af6123db565b60d18281548110610829576108296123db565b6000918252602090912001558061083f816123f1565b915050610776565b5060cc546108559082611667565b60cc555050505050565b60cd546001600160a01b031633146108ca5760405162461bcd60e51b815260206004820152602860248201527f4f746f6b656e3a204f6e6c7920436f6e74726f6c6c65722063616e206d696e74604482015267204f746f6b656e7360c01b60648201526084016105e4565b60d05481146109445760405162461bcd60e51b815260206004820152604c60248201526000805160206124b883398151915260448201527f6c61746572616c7356616c756573466f724d696e74206d757374206265206f6660648201526b040e6c2daca40d8cadccee8d60a31b608482015260a4016105e4565b60d05483146109bf5760405162461bcd60e51b815260206004820152604d60248201526000805160206124b883398151915260448201527f6c61746572616c73416d6f756e7473466f724d696e74206d757374206265206f60648201526c0cc40e6c2daca40d8cadccee8d609b1b608482015260a4016105e4565b60005b60d054811015610aac57610a1460d282815481106109e2576109e26123db565b90600052602060002001548484848181106109ff576109ff6123db565b9050602002013561167a90919063ffffffff16565b60d28281548110610a2757610a276123db565b600091825260209091200155610a7b858583818110610a4857610a486123db565b9050602002013560d18381548110610a6257610a626123db565b906000526020600020015461167a90919063ffffffff16565b60d18281548110610a8e57610a8e6123db565b60009182526020909120015580610aa4816123f1565b9150506109c2565b5060cc54610aba908661167a565b60cc55610ac78686611686565b505050505050565b60cd546001600160a01b03163314610af95760405162461bcd60e51b81526004016105e490612393565b610b038282611765565b5050565b6001600160a01b0381166000908152609960205260408120545b92915050565b60606037805461049c90612330565b606060d080548060200260200160405190810160405280929190818152602001828054801561051557602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610b70575050505050905090565b3360009081526034602090815260408083206001600160a01b038616845290915281205482811015610c195760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016105e4565b610c2633858584036112f8565b5060019392505050565b600061054d33848461141d565b606060d180548060200260200160405190810160405280929190818152602001828054801561051557602002820191906000526020600020905b815481526020019060010190808311610c77575050505050905090565b60ce5460cf5460d35460d45460d55460cc5460d08054604080516020808402820181019092528281526060998a996000998a998a998a998a998a99909860d1986001600160a01b03988916989097169660ff90941693918a91830182828015610d2657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610d08575b5050505050975086805480602002602001604051908101604052809291908181526020018280548015610d7857602002820191906000526020600020905b815481526020019060010190808311610d64575b50505050509650975097509750975097509750975097509091929394959697565b600054610100900460ff16610db45760005460ff1615610db8565b303b155b610e1b5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105e4565b600054610100900460ff16158015610e3d576000805461ffff19166101011790555b84610e955760405162461bcd60e51b815260206004820152602260248201527f636f6c6c61746572616c417373657473206d757374206265206e6f6e2d656d70604482015261747960f01b60648201526084016105e4565b6006851115610f1a5760405162461bcd60e51b8152602060048201526044602482018190527f636f6c6c61746572616c417373657473206d757374206265206c657373207468908201527f616e206f7220657175616c20746f204d41585f434f4c4c41544552414c5f41536064820152635345545360e01b608482015260a4016105e4565b886001600160a01b0316633018205f6040518163ffffffff1660e01b815260040160206040518083038186803b158015610f5357600080fd5b505afa158015610f67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8b919061240c565b60cd80546001600160a01b03199081166001600160a01b039384161790915560ce805482168b841617905560cf8054909116918916919091179055610fd260d08787611d5a565b5060d05467ffffffffffffffff811115610fee57610fee612429565b604051908082528060200260200182016040528015611017578160200160208202803683370190505b50805161102c9160d191602090910190611dbd565b5060d05467ffffffffffffffff81111561104857611048612429565b604051908082528060200260200182016040528015611071578160200160208202803683370190505b5080516110869160d291602090910190611dbd565b5060d384905560d483905560d5805483151560ff199091161790556000806110ec6040805180820182526009815268746f6b656e4e616d6560b81b6020808301919091528251808401909352600b83526a1d1bdad95b94de5b589bdb60aa1b9083015291565b915091506110fa82826118b0565b611103826118fe565b50508015611117576000805461ff00191690555b505050505050505050565b606060d28054806020026020016040519081016040528092919081815260200182805480156105155760200282019190600052602060002090815481526020019060010190808311610c77575050505050905090565b834211156111c85760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016105e4565b6000609a548888886111d98c61195c565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e001604051602081830303815290604052805190602001209050600061123482611984565b90506000611244828787876119d2565b9050896001600160a01b0316816001600160a01b0316146112a75760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016105e4565b6112b28a8a8a6112f8565b50505050505050505050565b60d2818154811061052f57600080fd5b60d081815481106112de57600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b03831661135a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105e4565b6001600160a01b0382166113bb5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105e4565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166114815760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105e4565b6001600160a01b0382166114e35760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105e4565b6001600160a01b0383166000908152603360205260409020548181101561155b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016105e4565b6001600160a01b0380851660009081526033602052604080822085850390559185168152908120805484929061159290849061237b565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516115de91815260200190565b60405180910390a350505050565b600061060f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f61161b60655490565b6066546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b6000611673828461243f565b9392505050565b6000611673828461237b565b6001600160a01b0382166116dc5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016105e4565b80603560008282546116ee919061237b565b90915550506001600160a01b0382166000908152603360205260408120805483929061171b90849061237b565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b0382166117c55760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016105e4565b6001600160a01b038216600090815260336020526040902054818110156118395760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016105e4565b6001600160a01b038316600090815260336020526040812083830390556035805484929061186890849061243f565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001611410565b505050565b600054610100900460ff166118d75760405162461bcd60e51b81526004016105e490612456565b81516118ea906036906020850190611df8565b5080516118ab906037906020840190611df8565b600054610100900460ff166119255760405162461bcd60e51b81526004016105e490612456565b61192d6119fa565b61195081604051806040016040528060018152602001603160f81b815250611a23565b61195981611a64565b50565b6001600160a01b03811660009081526099602052604090208054600181018255905b50919050565b6000610b216119916115ec565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b60008060006119e387878787611ab2565b915091506119f081611b9f565b5095945050505050565b600054610100900460ff16611a215760405162461bcd60e51b81526004016105e490612456565b565b600054610100900460ff16611a4a5760405162461bcd60e51b81526004016105e490612456565b815160209283012081519190920120606591909155606655565b600054610100900460ff16611a8b5760405162461bcd60e51b81526004016105e490612456565b507f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9609a55565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611ae95750600090506003611b96565b8460ff16601b14158015611b0157508460ff16601c14155b15611b125750600090506004611b96565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611b66573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611b8f57600060019250925050611b96565b9150600090505b94509492505050565b6000816004811115611bb357611bb36124a1565b1415611bbc5750565b6001816004811115611bd057611bd06124a1565b1415611c1e5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016105e4565b6002816004811115611c3257611c326124a1565b1415611c805760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016105e4565b6003816004811115611c9457611c946124a1565b1415611ced5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016105e4565b6004816004811115611d0157611d016124a1565b14156119595760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016105e4565b828054828255906000526020600020908101928215611dad579160200282015b82811115611dad5781546001600160a01b0319166001600160a01b03843516178255602090920191600190910190611d7a565b50611db9929150611e6b565b5090565b828054828255906000526020600020908101928215611dad579160200282015b82811115611dad578251825591602001919060010190611ddd565b828054611e0490612330565b90600052602060002090601f016020900481019282611e265760008555611dad565b82601f10611e3f57805160ff1916838001178555611dad565b82800160010185558215611dad5791820182811115611dad578251825591602001919060010190611ddd565b5b80821115611db95760008155600101611e6c565b600060208083528351808285015260005b81811015611ead57858101830151858201604001528201611e91565b81811115611ebf576000604083870101525b50601f01601f1916929092016040019392505050565b600060208284031215611ee757600080fd5b5035919050565b6001600160a01b038116811461195957600080fd5b60008060408385031215611f1657600080fd5b8235611f2181611eee565b946020939093013593505050565b600080600060608486031215611f4457600080fd5b8335611f4f81611eee565b92506020840135611f5f81611eee565b929592945050506040919091013590565b60008083601f840112611f8257600080fd5b50813567ffffffffffffffff811115611f9a57600080fd5b6020830191508360208260051b8501011115611fb557600080fd5b9250929050565b600080600080600060608688031215611fd457600080fd5b853567ffffffffffffffff80821115611fec57600080fd5b611ff889838a01611f70565b9097509550602088013591508082111561201157600080fd5b5061201e88828901611f70565b96999598509660400135949350505050565b6000806000806000806080878903121561204957600080fd5b863561205481611eee565b955060208701359450604087013567ffffffffffffffff8082111561207857600080fd5b6120848a838b01611f70565b9096509450606089013591508082111561209d57600080fd5b506120aa89828a01611f70565b979a9699509497509295939492505050565b6000602082840312156120ce57600080fd5b813561167381611eee565b600081518084526020808501945080840160005b838110156121125781516001600160a01b0316875295820195908201906001016120ed565b509495945050505050565b60208152600061167360208301846120d9565b600081518084526020808501945080840160005b8381101561211257815187529582019590820190600101612144565b6020815260006116736020830184612130565b60006101008083526121878184018c6120d9565b9050828103602084015261219b818b612130565b6001600160a01b03998a16604085015297909816606083015250608081019490945260a0840192909252151560c083015260e0909101529392505050565b60008060008060008060008060e0898b0312156121f557600080fd5b883561220081611eee565b9750602089013561221081611eee565b9650604089013561222081611eee565b9550606089013567ffffffffffffffff81111561223c57600080fd5b6122488b828c01611f70565b9096509450506080890135925060a0890135915060c0890135801515811461226f57600080fd5b809150509295985092959890939650565b600080600080600080600060e0888a03121561229b57600080fd5b87356122a681611eee565b965060208801356122b681611eee565b95506040880135945060608801359350608088013560ff811681146122da57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561230a57600080fd5b823561231581611eee565b9150602083013561232581611eee565b809150509250929050565b600181811c9082168061234457607f821691505b6020821081141561197e57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000821982111561238e5761238e612365565b500190565b60208082526028908201527f4f746f6b656e3a204f6e6c7920436f6e74726f6c6c65722063616e206275726e604082015267204f746f6b656e7360c01b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b600060001982141561240557612405612365565b5060010190565b60006020828403121561241e57600080fd5b815161167381611eee565b634e487b7160e01b600052604160045260246000fd5b60008282101561245157612451612365565b500390565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b634e487b7160e01b600052602160045260246000fdfe4f746f6b656e3a20636f6c6c61746572616c41737365747320616e6420636f6ca264697066735822122030ed6167c5df39bfc4f56c4485fe0fe0f5bf88139a873201ee42fb5ad60a93cc64736f6c63430008090033";

type MockOtokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockOtokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockOtoken__factory extends ContractFactory {
  constructor(...args: MockOtokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockOtoken> {
    return super.deploy(overrides || {}) as Promise<MockOtoken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockOtoken {
    return super.attach(address) as MockOtoken;
  }
  connect(signer: Signer): MockOtoken__factory {
    return super.connect(signer) as MockOtoken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockOtokenInterface {
    return new utils.Interface(_abi) as MockOtokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockOtoken {
    return new Contract(address, _abi, signerOrProvider) as MockOtoken;
  }
}
