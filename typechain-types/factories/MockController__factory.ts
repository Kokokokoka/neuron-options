/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockController,
  MockControllerInterface,
} from "../MockController";

const _abi = [
  {
    inputs: [],
    name: "addressBook",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addressBook",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_callee",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "test0xCallee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_otoken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "testBurnOtoken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_otoken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "collateralsAmountsForMint",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "collateralsValuesForMint",
        type: "uint256[]",
      },
    ],
    name: "testMintOtoken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506105ec806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80632cbd549714610067578063485cc9551461007c5780634eaee251146100b85780638da5cb5b146100cb578063d5999263146100fa578063f5887cdd1461010d575b600080fd5b61007a6100753660046102b9565b610120565b005b61007a61008a36600461035f565b600080546001600160a01b039384166001600160a01b03199182161790915560018054929093169116179055565b61007a6100c6366004610392565b610184565b6001546100de906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b61007a61010836600461044e565b6101eb565b6000546100de906001600160a01b031681565b6040516309c23da560e41b81526001600160a01b03831690639c23da509061014e90339085906004016104dd565b600060405180830381600087803b15801561016857600080fd5b505af115801561017c573d6000803e3d6000fd5b505050505050565b6040516356d878f760e01b81526001600160a01b038381166004830152602482018390528416906356d878f790604401600060405180830381600087803b1580156101ce57600080fd5b505af11580156101e2573d6000803e3d6000fd5b50505050505050565b604051632b4bf19b60e11b81526001600160a01b03861690635697e3369061021d90879087908790879060040161057d565b600060405180830381600087803b15801561023757600080fd5b505af115801561024b573d6000803e3d6000fd5b505050505050505050565b80356001600160a01b038116811461026d57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156102b1576102b1610272565b604052919050565b600080604083850312156102cc57600080fd5b6102d583610256565b915060208084013567ffffffffffffffff808211156102f357600080fd5b818601915086601f83011261030757600080fd5b81358181111561031957610319610272565b61032b601f8201601f19168501610288565b9150808252878482850101111561034157600080fd5b80848401858401376000848284010152508093505050509250929050565b6000806040838503121561037257600080fd5b61037b83610256565b915061038960208401610256565b90509250929050565b6000806000606084860312156103a757600080fd5b6103b084610256565b92506103be60208501610256565b9150604084013590509250925092565b600082601f8301126103df57600080fd5b8135602067ffffffffffffffff8211156103fb576103fb610272565b8160051b61040a828201610288565b928352848101820192828101908785111561042457600080fd5b83870192505b848310156104435782358252918301919083019061042a565b979650505050505050565b600080600080600060a0868803121561046657600080fd5b61046f86610256565b945061047d60208701610256565b935060408601359250606086013567ffffffffffffffff808211156104a157600080fd5b6104ad89838a016103ce565b935060808801359150808211156104c357600080fd5b506104d0888289016103ce565b9150509295509295909350565b60018060a01b038316815260006020604081840152835180604085015260005b81811015610519578581018301518582016060015282016104fd565b8181111561052b576000606083870101525b50601f01601f191692909201606001949350505050565b600081518084526020808501945080840160005b8381101561057257815187529582019590820190600101610556565b509495945050505050565b60018060a01b03851681528360208201526080604082015260006105a46080830185610542565b8281036060840152610443818561054256fea26469706673582212202051f44feff506d1f78f6f29355c5698b2e6e71007ab2787051d9d400a45776c64736f6c63430008090033";

type MockControllerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockControllerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockController__factory extends ContractFactory {
  constructor(...args: MockControllerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockController> {
    return super.deploy(overrides || {}) as Promise<MockController>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockController {
    return super.attach(address) as MockController;
  }
  connect(signer: Signer): MockController__factory {
    return super.connect(signer) as MockController__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockControllerInterface {
    return new utils.Interface(_abi) as MockControllerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockController {
    return new Contract(address, _abi, signerOrProvider) as MockController;
  }
}
