/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  UpgradeableContractV2,
  UpgradeableContractV2Interface,
} from "../UpgradeableContractV2";

const _abi = [
  {
    inputs: [],
    name: "addressBook",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getV1Version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getV2Version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addressBook",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610244806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063485cc9551461005c5780638da5cb5b146100715780638f26c061146100a15780639b2c78b5146100b2578063f5887cdd146100b9575b600080fd5b61006f61006a3660046101db565b6100cc565b005b603454610084906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b60015b604051908152602001610098565b60026100a4565b603354610084906001600160a01b031681565b600054610100900460ff16806100e15750303b155b806100ef575060005460ff16155b6101565760405162461bcd60e51b815260206004820152602e60248201527f436f6e747261637420696e7374616e63652068617320616c726561647920626560448201526d195b881a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600054610100900460ff16158015610178576000805461ffff19166101011790555b603380546001600160a01b038086166001600160a01b031992831617909255603480549285169290911691909117905580156101ba576000805461ff00191690555b505050565b80356001600160a01b03811681146101d657600080fd5b919050565b600080604083850312156101ee57600080fd5b6101f7836101bf565b9150610205602084016101bf565b9050925092905056fea2646970667358221220cd784dd43c7dad02b72f1fb8a8254fb16044ac458b95a3e8504b3b29c871f9cc64736f6c63430008090033";

type UpgradeableContractV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UpgradeableContractV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UpgradeableContractV2__factory extends ContractFactory {
  constructor(...args: UpgradeableContractV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UpgradeableContractV2> {
    return super.deploy(overrides || {}) as Promise<UpgradeableContractV2>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): UpgradeableContractV2 {
    return super.attach(address) as UpgradeableContractV2;
  }
  connect(signer: Signer): UpgradeableContractV2__factory {
    return super.connect(signer) as UpgradeableContractV2__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UpgradeableContractV2Interface {
    return new utils.Interface(_abi) as UpgradeableContractV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UpgradeableContractV2 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as UpgradeableContractV2;
  }
}
